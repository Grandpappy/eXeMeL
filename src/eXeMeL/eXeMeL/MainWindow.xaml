<MahApps:MetroWindow
  xmlns:MahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:views="clr-namespace:eXeMeL.View"
  xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
  ResizeMode="CanResize"
  SaveWindowPosition="True"
  mc:Ignorable="d" 
  x:Class="eXeMeL.MainWindow"
  Title="eXeMeL" 
  ShowTitleBar="False"
  Icon="Assets\eXeMeL Icon.ico"
  d:DesignWidth="742" d:DesignHeight="577"
  x:Name="ControlRoot"
  GlowBrush="#FFD4AA00"
  >


  <MahApps:MetroWindow.Resources>
    <ResourceDictionary>
      <Style x:Key="SectionHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>
        <Setter Property="FontSize" Value="26.667"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Opacity" Value="0.8"/>
      </Style>

    </ResourceDictionary>
  </MahApps:MetroWindow.Resources>



  <MahApps:MetroWindow.DataContext>
    <Binding Path="Main" Source="{StaticResource Locator}"/>
  </MahApps:MetroWindow.DataContext>



  <MahApps:MetroWindow.WindowCommands>
    <MahApps:WindowCommands>

      <Button 
        Command="{Binding Editor.RefreshCommand}" 
        ToolTip="Replace all text with what's in the clipboard (F5)" Focusable="False"
        >
        <StackPanel Orientation="Horizontal" Background="Transparent">
          <Rectangle Width="20" Height="20" Fill="{DynamicResource BlackBrush}" OpacityMask="{DynamicResource RefreshIconBrush}"/>
          <TextBlock Text="refresh" FontFamily="SegoeUI" FontWeight="Bold" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="14"/>
        </StackPanel>
      </Button>


      <Button 
        Command="{Binding Editor.CopyCommand}" 
        ToolTip="Copy all text to the clipboard"  Focusable="False"
        >
        <StackPanel Orientation="Horizontal" Background="Transparent">
          <Rectangle Width="20" Height="20" Fill="{DynamicResource BlackBrush}" OpacityMask="{DynamicResource CopyIconBrush}"/>
          <TextBlock Text="copy all" FontFamily="SegoeUI" FontWeight="Bold" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="14"/>
        </StackPanel>
      </Button>


      <Button 
        Command="{Binding Editor.SaveCommand}" 
        ToolTip="Save the contents of the editor (Ctrl+S)" Focusable="False"
        >
        <StackPanel Orientation="Horizontal" Background="Transparent">
          <Rectangle Width="20" Height="20" Fill="{DynamicResource BlackBrush}" OpacityMask="{DynamicResource SaveIconBrush}"/>
          <TextBlock Text="save" FontFamily="SegoeUI" FontWeight="Bold" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="14"/>
        </StackPanel>
      </Button>


      <Button Click="OpenSettingsButton_Click" ToolTip="Edit settings" Focusable="False">
        <Rectangle Width="20" Height="20" Fill="{DynamicResource BlackBrush}" OpacityMask="{DynamicResource SettingsIconbrush}"/>
      </Button>

    </MahApps:WindowCommands>
  </MahApps:MetroWindow.WindowCommands>



  <MahApps:MetroWindow.Flyouts>
    <MahApps:FlyoutsControl>
      <MahApps:FlyoutsControl.Items>
        <MahApps:Flyout
            x:Name="SettingsFlyout"
            Header="Settings"
            IsOpen="False"
            Background="{DynamicResource FlyoutBackgroundBrush}"
            Foreground="{DynamicResource FlyoutForegroundBrush}"
            >
          <StackPanel Orientation="Vertical">
            <views:SettingsView DataContext="{Binding Settings}"/>
            <Button x:Name="ChangeLogButton" Content="View Change Log" Click="ChangeLogButton_Click" Margin="10" HorizontalAlignment="Left" Focusable="False"/>
          </StackPanel>
        </MahApps:Flyout>
      </MahApps:FlyoutsControl.Items>
    </MahApps:FlyoutsControl>


  </MahApps:MetroWindow.Flyouts>



  <MahApps:MetroWindow.InputBindings>
    <KeyBinding Key="F5" Command="{Binding Editor.RefreshCommand}"/>
    <KeyBinding Key="F2" Command="{Binding ToggleEditorModeCommand}"/>
    <KeyBinding Modifiers="Control" Key="F" Command="{Binding FocusOnFindControlCommand, ElementName=ControlRoot}"/>
    <KeyBinding Key="Escape" Command="{Binding ResetFocusCommand, ElementName=ControlRoot}"/>
    <KeyBinding Modifiers="Control" Key="S" Command="{Binding Editor.SaveCommand}"/>

    <KeyBinding Modifiers="Alt" Key="D0" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="0" />
    <KeyBinding Modifiers="Alt+Shift" Key="D0" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="0" />
    <KeyBinding Modifiers="Alt" Key="D1" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="1" />
    <KeyBinding Modifiers="Alt+Shift" Key="D1" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="1" />
    <KeyBinding Modifiers="Alt" Key="D2" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="2" />
    <KeyBinding Modifiers="Alt+Shift" Key="D2" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="2" />
    <KeyBinding Modifiers="Alt" Key="D3" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="3" />
    <KeyBinding Modifiers="Alt+Shift" Key="D3" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="3" />
    <KeyBinding Modifiers="Alt" Key="D4" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="4" />
    <KeyBinding Modifiers="Alt+Shift" Key="D4" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="4" />
    <KeyBinding Modifiers="Alt" Key="D5" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="5" />
    <KeyBinding Modifiers="Alt+Shift" Key="D5" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="5" />
    <KeyBinding Modifiers="Alt" Key="D6" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="6" />
    <KeyBinding Modifiers="Alt+Shift" Key="D6" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="6" />
    <KeyBinding Modifiers="Alt" Key="D7" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="7" />
    <KeyBinding Modifiers="Alt+Shift" Key="D7" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="7" />
    <KeyBinding Modifiers="Alt" Key="D8" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="8" />
    <KeyBinding Modifiers="Alt+Shift" Key="D8" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="8" />
    <KeyBinding Modifiers="Alt" Key="D9" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="9" />
    <KeyBinding Modifiers="Alt+Shift" Key="D9" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="9" />
    <KeyBinding Modifiers="Alt" Key="OemMinus" Command="{Binding FoldLevelCommand, ElementName=ControlRoot}" CommandParameter="-" />
    <KeyBinding Modifiers="Alt+Shift" Key="OemMinus" Command="{Binding UnFoldLevelCommand, ElementName=ControlRoot}" CommandParameter="-" />
  </MahApps:MetroWindow.InputBindings>


  <Grid Background="#00000000">
    <i:Interaction.Triggers>
      <ei:DataTrigger Binding="{Binding EditorMode}" Value="Editor">
        <ei:GoToStateAction x:Name="GoToEditorViewAction" StateName="Editor"/>
      </ei:DataTrigger>
      <ei:DataTrigger Binding="{Binding EditorMode}" Value="XmlUtility">
        <ei:GoToStateAction x:Name="GoToXmlUtilityAction" StateName="XmlUtility"/>
      </ei:DataTrigger>
    </i:Interaction.Triggers>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="EditorView">
        <VisualState x:Name="Editor">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="XmlUtilityView">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState x:Name="XmlUtility">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="XmlUtilityView">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AvalonEditor">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditorFindControl">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditorSnapshotControl">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentControl.Content)" Storyboard.TargetName="button">
              <DiscreteObjectKeyFrame KeyTime="0" Value="XPath Utility"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <Grid.RowDefinitions>
      <RowDefinition Height="40"/>
      <RowDefinition/>
      <RowDefinition Height="28"/>
    </Grid.RowDefinitions>

    <Border Grid.Row="2">
      <Border.Background>
        <SolidColorBrush Color="{DynamicResource AccentColor}"/>
      </Border.Background>
    </Border>

    <Border Grid.Row="1">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition Width="5"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Margin="0" Padding="5,0,5,5" DataContext="{Binding Editor}">

          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Height="40" >
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>

              <Rectangle Grid.Column="0" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,10,5,5" Fill="{DynamicResource AccentColorBrush}">
                <Rectangle.OpacityMask>
                  <VisualBrush Visual="{StaticResource EditorIconCanvas}" Stretch="Fill" />
                </Rectangle.OpacityMask>
              </Rectangle>

              <Button x:Name="button" Grid.Column="1" Margin="5,1,0,0" Command="{Binding ViewModel.ToggleEditorModeCommand, ElementName=ControlRoot}" Content="Editor" ToolTip="Click to change the view (F2)" Focusable="False">
                <Button.Template>
                  <ControlTemplate TargetType="Button">
                    <Border Background="Transparent" BorderThickness="0">
                      <TextBlock Name="HeaderText" Text="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Normal" Style="{DynamicResource SectionHeaderStyle}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="HeaderText" Property="Opacity" Value="1"/>
                        <Setter TargetName="HeaderText" Property="Foreground" Value="White"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Button.Template>
              </Button>

              <Rectangle Grid.Column="2" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,10,5,5" Fill="{DynamicResource AccentColorBrush}">
                <Rectangle.ToolTip>
                  <TextBlock Text="{Binding FilePath}"/>
                </Rectangle.ToolTip>
                <Rectangle.OpacityMask>
                  <VisualBrush Visual="{StaticResource XMLDocumentIcon}" Stretch="Fill" />
                </Rectangle.OpacityMask>
                <Rectangle.Style>
                  <Style TargetType="Rectangle">
                    <Setter Property="Visibility" Value="Visible"/>

                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsContentFromFile}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Rectangle.Style>
              </Rectangle>
              <Rectangle Grid.Column="2" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,10,5,5" Fill="{DynamicResource AccentColorBrush}">
                <Rectangle.ToolTip>
                  <TextBlock Text="This is a temporary file.  Save the file to persist it."/>
                </Rectangle.ToolTip>
                <Rectangle.OpacityMask>
                  <VisualBrush Visual="{StaticResource XMLIcon}" Stretch="Fill" />
                </Rectangle.OpacityMask>
                <Rectangle.Style>
                  <Style TargetType="Rectangle">
                    <Setter Property="Visibility" Value="Visible"/>

                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsContentFromFile}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Rectangle.Style>
              </Rectangle>

              <views:EditorSnapshotView 
                x:Name="EditorSnapshotControl" 
                Grid.Column="3" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Center"
                />
              <views:EditorFindView 
                x:Name="EditorFindControl" 
                Grid.Column="4" 
                Margin="20,0,0,0"
                HorizontalAlignment="Right" 
                VerticalAlignment="Center"
                />
            </Grid>

            <avalonEdit:TextEditor
              x:Name="AvalonEditor"
              Grid.Row="1"
              Margin="0,15,0,0"
              FontFamily="{Binding Settings.FontFamily}" 
              FontSize="{Binding Settings.EditorFontSize}" 
              SyntaxHighlighting="{Binding DataContext.HighlightingManager.HighlightingDefinition, Mode=OneWay, ElementName=ControlRoot}"
              BorderThickness="1" 
              Document="{Binding Document}"
              VerticalScrollBarVisibility="Auto" 
              HorizontalScrollBarVisibility="Auto"
              ShowLineNumbers="{Binding Settings.ShowEditorLineNumbers}"
              WordWrap="{Binding Settings.WrapEditorText}"
              Background="{x:Null}"
              Foreground="{Binding Settings.EditorBrush}"
              MouseRightButtonDown="AvalonEditor_TextAreaMouseRightButtonDown"
              >
              <avalonEdit:TextEditor.ContextMenu>
                <ContextMenu>
                  <MenuItem Header="Copy" Command="Copy"/>
                  <MenuItem Header="Cut" Command="Cut"/>
                  <MenuItem Header="Paste" Command="Paste"/>
                  <Separator Margin="3"/>
                  <MenuItem Header="Delve into Decoded XML" Command="{Binding DelveIntoDecodedXmlFromCursorPositionCommand}"/>
                  <MenuItem Header="Copy Decoded XML" Command="{Binding CopyDecodedXmlFromCursorPositionCommand}"/>
                </ContextMenu>
              </avalonEdit:TextEditor.ContextMenu>
              <avalonEdit:TextEditor.Options>
                <avalonEdit:TextEditorOptions
                  EnableHyperlinks="False"
                  EnableEmailHyperlinks="False"
                  AllowScrollBelowDocument="True"
                  />
              </avalonEdit:TextEditor.Options>
            </avalonEdit:TextEditor>

            <views:XmlUtilityView 
              x:Name="XmlUtilityView"
              Grid.Row="1"
              Margin="0,15,0,0" 
              Visibility="Collapsed"
              DataContext="{Binding ViewModel.XmlUtility, ElementName=ControlRoot}"
              />
          </Grid>
        </Border>

        <Border Grid.Column="2" Margin="0" Padding="5,0,5,5" Cursor="Hand" Visibility="Collapsed">
          <Grid>
            <Button HorizontalAlignment="Stretch" Margin="-5,0,-5,-5" Focusable="False">
              <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Border Background="{DynamicResource Gray4Brush}" Padding="5,0,5,5">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                          <VisualTransition GeneratedDuration="0:0:0.2"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                          <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InactiveIcon">
                              <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActiveIcon">
                              <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                          <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InactiveIcon">
                              <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActiveIcon">
                              <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid>
                      <Rectangle x:Name="InactiveIcon" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,5,5" Fill="{DynamicResource Gray2Brush}">
                        <Rectangle.OpacityMask>
                          <VisualBrush Visual="{StaticResource NavigateXmlCanvas}" Stretch="Fill" />
                        </Rectangle.OpacityMask>
                      </Rectangle>
                      <Rectangle x:Name="ActiveIcon" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Fill="{DynamicResource AccentColorBrush}" Opacity="0">
                        <Rectangle.OpacityMask>
                          <VisualBrush Visual="{StaticResource NavigateXmlCanvas}" Stretch="Fill" />
                        </Rectangle.OpacityMask>
                      </Rectangle>

                      <TextBlock Text="Navigator" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,45,0,0" FontSize="26.667" RenderTransformOrigin="-0.22,0.5" Foreground="{DynamicResource Gray2Brush}" Style="{DynamicResource SectionHeaderStyle}" FontWeight="Normal">
                        <TextBlock.LayoutTransform>
                          <TransformGroup>
                            <ScaleTransform CenterX="-0.22" CenterY="0.5"/>
                            <SkewTransform CenterX="-0.22" CenterY="0.5"/>
                            <RotateTransform CenterX="-0.22" CenterY="0.5" Angle="90"/>
                            <TranslateTransform/>
                          </TransformGroup>
                        </TextBlock.LayoutTransform>
                      </TextBlock>
                    </Grid>
                  </Border>
                </ControlTemplate>
              </Button.Template>
            </Button>

          </Grid>
        </Border>
      </Grid>
    </Border>

    <Border Grid.Row="2" Background="{DynamicResource AccentColorBrush}" Padding="5,0">
      <Grid VerticalAlignment="Center">

        <Grid.Resources>
          <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="FontSize" Value="14"/>
          </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="4*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Column="0" Text="{Binding Status}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Status}" Foreground="{DynamicResource WhiteBrush}"/>
        <TextBlock Grid.Column="1" Text="{Binding ToolInformation}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Status}" Foreground="{DynamicResource WhiteBrush}" HorizontalAlignment="Right"/>
      </Grid>
    </Border>
  </Grid>
</MahApps:MetroWindow>
